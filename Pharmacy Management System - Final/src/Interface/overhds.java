/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import My_Code.DBconnect;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import Validation.Accounts;
import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.BorderFactory;
import javax.swing.JTextField;




/**
 *
 * @author MAXMO
 */
public class overhds extends javax.swing.JInternalFrame {
    Connection ct=null;
    PreparedStatement ps = null;
    ResultSet rs = null;
    
    String oid;

    /**
     * Creates new form overhds
     */
    public overhds() {
        initComponents();
        ct= DBconnect.connect();
        tabled();
        fillcombo();
       
    }
    
    
    public boolean dateValidation(){
        if(((JTextField)date.getDateEditor().getUiComponent()).getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Enter Date");
            return false;
        } else {
            return true;
        }
    }
    
     public void clear(){
        sal.setText ( " " );
        elec.setText ( " " );
        tel.setText ( " " );
        rent.setText ( " " );
        tax.setText ( " " );
        date.setDate(null);
        month.setSelectedItem("Select Month");
        total.setText("");
    }
    
    public void fillcombo () {
        
        
        try {
            
            String oh1 = ohid.getSelectedItem().toString();
            
            String sql = "SELECT * FROM overheads ";
            ps = ct.prepareStatement ( sql );
            rs = ps.executeQuery ();
                        
            while ( rs.next ()) {
                
                String acc = rs.getString ( 1);
                Boolean exists = false;
                for (int index = 0; index < ohid.getItemCount() && !exists; index++) {
                    if (acc.equals(ohid.getItemAt(index))) {
                        exists = true;
                    }
                }
                    if (!exists) {
                        ohid.addItem ( acc );
                    }
            }
            
            
            
        }
        
        
        
        catch ( Exception e ) {
            
            System.out.println ( e );
            
            JOptionPane.showMessageDialog ( null, "Records are incomplete. \nConnot add this records." );
            
        }

    }
//    public void itemCount ()
//    {
//        int itemCount = accno.getItemCount();
//        System.out.println(itemCount);
//        
//    for(int i=0;i<itemCount;i++){
//        
//        accno.removeItemAt(i);
//     }
//    }*/
    
    
    /* public void labelload(){
         try{
             String acc = accno.getSelectedItem().toString(); 
            String bank1 = bank.getSelectedItem().toString(); 
            String depoamt= depositamt.getText();
            String sql1 = "Select deposit_Id from bankdeposit where bankName='"+ bank1 +"' and accNo='"+ acc +"' and depositAmt='"+ depoamt +"'";
        
              ps = ct.prepareStatement(sql1);
              ps.executeQuery();
              while(rs.next()){
              did.setText(rs.getString("deposit_Id"));
              String depoID = did.getText();
               
            
              }
         }
         catch(Exception e){
             System.out.println(e);
         }
     }*/
    
    
    
    
    public void tabled(){
        try{
            String Se= "SELECT overheadid,date,totsal,elecbill,tellbill,rent,tax FROM overheads";
            ps = ct.prepareStatement(Se);
            rs = ps.executeQuery();
            
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
        }catch (Exception e){
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jSeparator8 = new javax.swing.JSeparator();
        jLabel26 = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        tel = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        elec = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        rent = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        tax = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        remove = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        clear = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        sal = new javax.swing.JLabel();
        date = new com.toedter.calendar.JDateChooser();
        month = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        ohid = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        total = new javax.swing.JLabel();
        add1 = new javax.swing.JButton();

        setBorder(null);
        setPreferredSize(new java.awt.Dimension(1080, 640));

        jPanel3.setBackground(new java.awt.Color(215, 215, 230));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel3.add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 480, 200, 0));

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel26.setText("Electricity bill");
        jPanel3.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, -1, -1));

        add.setBackground(new java.awt.Color(85, 55, 118));
        add.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        add.setForeground(new java.awt.Color(255, 255, 255));
        add.setText("Add");
        add.setFocusable(false);
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        jPanel3.add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 490, 110, 40));

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel27.setText("Telephone Bill");
        jPanel3.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, -1, -1));

        tel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                telKeyTyped(evt);
            }
        });
        jPanel3.add(tel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 280, 230, 30));

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel23.setText("Month");
        jPanel3.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, 40));

        elec.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                elecKeyTyped(evt);
            }
        });
        jPanel3.add(elec, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 230, 230, 30));

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel28.setText("Rent");
        jPanel3.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, -1, -1));

        rent.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                rentKeyTyped(evt);
            }
        });
        jPanel3.add(rent, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 330, 230, 30));

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel29.setText("Overhead Id");
        jPanel3.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 410, -1, -1));

        tax.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                taxKeyTyped(evt);
            }
        });
        jPanel3.add(tax, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 380, 230, 30));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel10.setText("Overheads");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 269, 81));

        jButton7.setBackground(new java.awt.Color(85, 55, 118));
        jButton7.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Total");
        jButton7.setFocusable(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 550, 90, 40));

        remove.setBackground(new java.awt.Color(85, 55, 118));
        remove.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        remove.setForeground(new java.awt.Color(255, 255, 255));
        remove.setText("Remove");
        remove.setFocusable(false);
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });
        jPanel3.add(remove, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 400, 120, 40));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 110, 510, 280));

        clear.setBackground(new java.awt.Color(85, 55, 118));
        clear.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        clear.setForeground(new java.awt.Color(255, 255, 255));
        clear.setText("Clear");
        clear.setFocusable(false);
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        jPanel3.add(clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 490, 100, 40));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Date");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 430, -1, -1));

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel30.setText("Tax");
        jPanel3.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, -1, -1));
        jPanel3.add(sal, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 180, 230, 30));

        date.setDateFormatString("yyyy-MM-dd");
        jPanel3.add(date, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 440, 230, 30));

        month.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        month.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Month", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthActionPerformed(evt);
            }
        });
        jPanel3.add(month, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 120, 230, 40));

        jButton1.setBackground(new java.awt.Color(85, 55, 118));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 180, 30, 30));

        ohid.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ohid.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Overhead Id" }));
        jPanel3.add(ohid, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 400, 180, 40));

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel24.setText("Total Salary");
        jPanel3.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, -1, 40));
        jPanel3.add(total, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 560, 230, 30));

        add1.setBackground(new java.awt.Color(85, 55, 118));
        add1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        add1.setForeground(new java.awt.Color(255, 255, 255));
        add1.setText("Update");
        add1.setFocusable(false);
        add1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add1ActionPerformed(evt);
            }
        });
        jPanel3.add(add1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 490, 110, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1080, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 607, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 502, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        clear();
       
    }//GEN-LAST:event_clearActionPerformed

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
        // TODO add your handling code here:

        int x = JOptionPane.showConfirmDialog ( null, "Do you really want to delete?" );

        if ( x==0 ) {

            String ID = ohid.getSelectedItem().toString();
            

            try {

                String sql = "DELETE FROM overheads WHERE overheadid = '"+ ID+"' ";
                ps = ct.prepareStatement ( sql );
                ps.execute ();

                //                sql = "DELETE FROM login WHERE Username = '"+ sid +"' ";
                //                ps = ct.prepareStatement ( sql );
                //                ps.execute ();

                ohid.removeItem(ID);
                JOptionPane.showMessageDialog ( null, "Delete Succesful" );

                tabled ();

            }

            catch ( Exception e ) {

                JOptionPane.showMessageDialog ( null, "Invalid Records. \nConnot delete." );

                System.out.println ( e );

            }
        }
    }//GEN-LAST:event_removeActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        Accounts a = new Accounts();
       
         
         //SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
         //String da = sdf.format(d); 
         
             
            
                 
        
        try{
            String Month=month.getSelectedItem().toString();
                 String elecbill = elec.getText();
                 String telbill = tel.getText();
                 String rents = rent.getText();
                 String taxes = tax.getText();
                 String x= sal.getText();
            
            SimpleDateFormat d = new SimpleDateFormat("yyyy-MM-dd");
            if(dateValidation()){
            String da = d.format(date.getDate());
            
           

                String sql = "INSERT INTO overheads ( date,totsal,elecbill,tellbill,rent,tax) VALUES ( '" + da + "','" + x + "', '" + elecbill + "', '" + telbill+ "', '" + rents + "','" + taxes + "')";
                ps = ct.prepareStatement(sql);
                ps.execute();

                JOptionPane.showMessageDialog(null, "Add Succesful");

                tabled();
                clear();
            }

            } catch (Exception e) {

                System.out.println(e);

               

            }
        fillcombo();
        
    }//GEN-LAST:event_addActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try{
         String Month=month.getSelectedItem().toString();
         Calendar d = Calendar.getInstance();
         int year = d.get(Calendar.YEAR);
         String year1= Integer.toString(year);
         //SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
         //String da = sdf.format(d);
         //
         
             
             if(Month.equals("Select Month")){
                 JOptionPane.showMessageDialog(null, "Enter Month");
             }
             else{
                 System.out.println(year1);
         System.out.println(Month);
            String sql = "SELECT SUM(Total_Salary) FROM salary where Month='"+ Month +"' and Year='"+ year1 +"'";
            ps = ct.prepareStatement(sql);
            rs= ps.executeQuery();
            while(rs.next()){
                String r =  rs.getString(1);
                //System.out.println(Double.toString(r));
                if(rs.getString("SUM(Total_Salary)")==null){
                    sal.setText(0.0+"");
                }
                else{
                    sal.setText(r);
                }
            }
               //sal.setText(Double.toString(r));
               
                //
            
             }
        
          //  String sql = "select Total_Salary from salary";
            //Double salary = Dou
        }
        catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void monthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_monthActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        try{
             SimpleDateFormat d = new SimpleDateFormat("yyyy-MM-dd");
            String da = d.format(date.getDate());
        
            String sql ="Select totsal,elecbill,tellbill,rent,tax from overheads where date= '"+ da +"'";
            ps = ct.prepareStatement(sql);
            rs = ps.executeQuery();
            while(rs.next()){
            double s1 = Double.parseDouble(rs.getString(1));
            double s2 = Double.parseDouble(rs.getString(2));
            double s3 = Double.parseDouble(rs.getString(3));
            double s4 = Double.parseDouble(rs.getString(4));
            double s5 = Double.parseDouble(rs.getString(5));
            
            double total1 = s1+ s2+s3+s4+s5;
            total.setText(Double.toString(total1));
            
            }}
            catch(Exception e){
                    System.out.println(e);
                    }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void add1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add1ActionPerformed
        // TODO add your handling code here:
        Accounts a = new Accounts();

        int x = JOptionPane.showConfirmDialog ( null, "Do you really want to update?" );

        if ( x==0 ) {
            if(a.MonthValidation(month.getSelectedItem().toString())){
                 String Month=month.getSelectedItem().toString();
             
        //String salary = sal.getText();
        if(a.isDoubleElecBill(elec.getText())){
        String elecbill = elec.getText();
        if(a.isDoubleTellBill(tel.getText())){
        String telbill = tel.getText();
        if(a.isDoubleRent(rent.getText())){
        String rents = rent.getText();
        if(a.isDoubleTax(tax.getText())){
        String taxes = tax.getText();
        //String dates=date.getText();
        String x1= sal.getText();
        
        SimpleDateFormat d = new SimpleDateFormat("yyyy-MM-dd");
        if(dateValidation()){
            String da = d.format(date.getDate());

                    try {

                        String sql = "UPDATE overheads SET date = '"+ da +"', totsal = '"+ x1 +"', elecbill = '"+ elecbill +"',tellbill = '"+ telbill +"',rent = '"+ rents +"', tax = '"+ taxes +"' WHERE overheadid = '"+ oid +"' ";
                        ps = ct.prepareStatement ( sql );
                        ps.execute ();

                        JOptionPane.showMessageDialog ( null, "Update Succesful" );

                        tabled();
                        clear();

                    }

                    catch ( Exception e ) {

                        System.out.println ( e );

                        JOptionPane.showMessageDialog ( null, "Invalid Records. \nConnot update." );

                    }
                }}}}}}}

    }//GEN-LAST:event_add1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int r = jTable1.getSelectedRow ();
        oid = jTable1.getValueAt ( r, 0).toString ();
        String date1 = jTable1.getValueAt ( r, 1 ).toString ();
        String sal1 = jTable1.getValueAt ( r, 2 ).toString ();
        String ebill1 = jTable1.getValueAt ( r, 3 ).toString ();
        String tbill1 = jTable1.getValueAt ( r, 4 ).toString ();
        String rent1 = jTable1.getValueAt ( r, 5 ).toString ();
        String tax1 = jTable1.getValueAt ( r, 6 ).toString ();
        
        String [] dateParts = date1.split("-");
        String month1 = dateParts[1];
        String month12 = null;
        int num = Integer.parseInt(month1);
        switch (num)
        {
        case 1:
            month12 = "January";
            break;
        case 2:
            month12 = "February";
            break;
        case 3:
            month12 = "March";
            break;
        case 4:
            month12 = "April";
            break;
        case 5:
            month12 = "May";
            break;
        case 6:
            month12 = "June";
            break;
        case 7:
            month12 = "July";
            break;
        case 8:
            month12 = "August";
            break;
        case 9:
            month12 = "September";
            break;
        case 10:
            month12 = "October";
            break;
        case 11:
            month12 = "November";
            break;
        case 12:
            month12 = "December";
            break;
        //default:
        //    System.out.println ("You have entered an invalid number");
        }
  
        //System.out.println(month12);
        month.setSelectedItem(month12);
        sal.setText(sal1);
        elec.setText ( ebill1 );
        tel.setText ( tbill1 );
        rent.setText ( rent1 );
        tax.setText ( tax1 );
        ((JTextField)date.getDateEditor().getUiComponent()).setText (date1);
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void elecKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_elecKeyTyped
        // TODO add your handling code here:
        Accounts a2= new Accounts();
        Accounts a3= new Accounts();
        
               String type1 = month.getSelectedItem().toString();
         if(!a3.MonthValidation(type1)){
             getToolkit().beep();
             elec.setText(" ");
             //qty.setBorder(BorderFactory.createLineBorder(Color.red));
             JOptionPane.showMessageDialog(null, "Select Month", "Error", JOptionPane.INFORMATION_MESSAGE);
             elec.setText(" ");
             evt.consume();
         }
         else{
               
         char c = evt.getKeyChar();
         String x = Character.toString(c);
         if(!(a2.isDoubleElecBill(x)||(c==KeyEvent.VK_BACK_SPACE)||(c==KeyEvent.VK_DELETE))){
             getToolkit().beep();
             elec.setBorder(BorderFactory.createLineBorder(Color.red));
             JOptionPane.showMessageDialog(null, "Electricity Bill Amount should be digits only", "Error", JOptionPane.INFORMATION_MESSAGE);
             evt.consume();
         }
         elec.setBorder(BorderFactory.createLineBorder(Color.GRAY));
         }
         
    }//GEN-LAST:event_elecKeyTyped

    private void telKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_telKeyTyped
        // TODO add your handling code here:
          Accounts a3= new Accounts();
        Accounts a2= new Accounts();
                String type1 = elec.getText();
         if(type1.equals("")){
             getToolkit().beep();
             tel.setText(" ");
             //qty.setBorder(BorderFactory.createLineBorder(Color.red));
             JOptionPane.showMessageDialog(null, "Enter Electricity Bill Amount", "Error", JOptionPane.INFORMATION_MESSAGE);
             tel.setText(" ");
             evt.consume();
         }
         else{
               
         char c = evt.getKeyChar();
         String x = Character.toString(c);
         if(!(a2.isDoubleTellBill(x)||(c==KeyEvent.VK_BACK_SPACE)||(c==KeyEvent.VK_DELETE))){
             getToolkit().beep();
             tel.setBorder(BorderFactory.createLineBorder(Color.red));
             JOptionPane.showMessageDialog(null, "Tell Bill Amount should be digits only", "Error", JOptionPane.INFORMATION_MESSAGE);
             evt.consume();
         }
         tel.setBorder(BorderFactory.createLineBorder(Color.GRAY));
         }
    }//GEN-LAST:event_telKeyTyped

    private void rentKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rentKeyTyped
        // TODO add your handling code here:
         Accounts a3= new Accounts();
        Accounts a2= new Accounts();
                String type1 = tel.getText();
         if(type1.equals("")){
             getToolkit().beep();
             rent.setText(" ");
             //qty.setBorder(BorderFactory.createLineBorder(Color.red));
             JOptionPane.showMessageDialog(null, "Enter Telephone Bill Amount", "Error", JOptionPane.INFORMATION_MESSAGE);
             rent.setText(" ");
             evt.consume();
         }
         else{
               
         char c = evt.getKeyChar();
         String x = Character.toString(c);
         if(!(a2.isDoubleRent(x)||(c==KeyEvent.VK_BACK_SPACE)||(c==KeyEvent.VK_DELETE))){
             getToolkit().beep();
             rent.setBorder(BorderFactory.createLineBorder(Color.red));
             JOptionPane.showMessageDialog(null, "Rent Amount is invalid", "Error", JOptionPane.INFORMATION_MESSAGE);
             evt.consume();
         }
         rent.setBorder(BorderFactory.createLineBorder(Color.GRAY));
         }
    }//GEN-LAST:event_rentKeyTyped

    private void taxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_taxKeyTyped
        // TODO add your handling code here:
         Accounts a3= new Accounts();
        Accounts a2= new Accounts();
                String type1 = rent.getText();
         if(type1.equals("")){
             getToolkit().beep();
             tax.setText(" ");
             //qty.setBorder(BorderFactory.createLineBorder(Color.red));
             JOptionPane.showMessageDialog(null, "Enter Rent Amount", "Error", JOptionPane.INFORMATION_MESSAGE);
             tax.setText(" ");
             evt.consume();
         }
         else{
               
         char c = evt.getKeyChar();
         String x = Character.toString(c);
         if(!(a2.isDoubleTax(x)||(c==KeyEvent.VK_BACK_SPACE)||(c==KeyEvent.VK_DELETE))){
             getToolkit().beep();
             tax.setBorder(BorderFactory.createLineBorder(Color.red));
             JOptionPane.showMessageDialog(null, "Tax Amount is invalid", "Error", JOptionPane.INFORMATION_MESSAGE);
             evt.consume();
         }
         tax.setBorder(BorderFactory.createLineBorder(Color.GRAY));
         }
    }//GEN-LAST:event_taxKeyTyped

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton add1;
    private javax.swing.JButton clear;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JTextField elec;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> month;
    private javax.swing.JComboBox<String> ohid;
    private javax.swing.JButton remove;
    private javax.swing.JTextField rent;
    private javax.swing.JLabel sal;
    private javax.swing.JTextField tax;
    private javax.swing.JTextField tel;
    private javax.swing.JLabel total;
    // End of variables declaration//GEN-END:variables
}
